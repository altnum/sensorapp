// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	database_instances "github.wdf.sap.corp/I554249/sensor/databases/database_instances"
)

// IDB is an autogenerated mock type for the IDB type
type IDB struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *IDB) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetInfluxInstance provides a mock function with given fields:
func (_m *IDB) GetInfluxInstance() database_instances.IInfluxDB {
	ret := _m.Called()

	var r0 database_instances.IInfluxDB
	if rf, ok := ret.Get(0).(func() database_instances.IInfluxDB); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(database_instances.IInfluxDB)
		}
	}

	return r0
}

// GetPostgreInstance provides a mock function with given fields:
func (_m *IDB) GetPostgreInstance() database_instances.IPostgreDB {
	ret := _m.Called()

	var r0 database_instances.IPostgreDB
	if rf, ok := ret.Get(0).(func() database_instances.IPostgreDB); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(database_instances.IPostgreDB)
		}
	}

	return r0
}

// Open provides a mock function with given fields: _a0
func (_m *IDB) Open(_a0 context.Context) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
